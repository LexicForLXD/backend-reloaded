type Host {
  ID: String!
  name: String!
  desc: String
  address: String!
  authenticated: Boolean!
  createdAt: Timestamp
  updatedAt: Timestamp
  deletedAt: Timestamp
}

input HostReq {
  name: String
  desc: String
  address: String
  password: String
}

input AuthHostReq {
  password: String!
}

extend type Query {
  hosts(limit: Int, offset: Int): [Host]!
  host(id: String!): Host
}

extend type Mutation {
  createHost(hostReq: HostReq!): Host
  updateHost(id: String!, hostReq: HostReq!): Host
  deleteHost(id: String!): DeleteRes
  authHost(id: String!, authReq: AuthHostReq!): Host
}
